<?xml version='1.0'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- SPDX-License-Identifier: LGPL-2.1-or-later -->

<refentry id="udevadm"
          xmlns:xi="http://www.w3.org/2001/XInclude">

  <refentryinfo>
    <title>udevadm</title>
    <productname>systemd</productname>
  </refentryinfo>

  <refmeta>
    <refentrytitle>udevadm</refentrytitle>
    <manvolnum>8</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>udevadm</refname><refpurpose>udev management tool</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>udevadm</command>
      <arg><option>--debug</option></arg>
      <arg><option>--version</option></arg>
      <arg><option>--help</option></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm info</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm trigger</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm settle</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm control</command>
      <arg choice="plain" rep="repeat"><replaceable>options</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm monitor</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm test</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="plain"><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm test-builtin</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="plain"><replaceable>command</replaceable></arg>
      <arg choice="plain"><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm verify</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>files</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm cat</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>files</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm wait</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="plain" rep="repeat"><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>udevadm lock</command>
      <arg choice="opt" rep="repeat"><replaceable>options</replaceable></arg>
      <arg choice="plain" rep="repeat"><replaceable>command</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para><command>udevadm</command> expects a command and command
    specific options.  It controls the runtime behavior of
    <command>systemd-udevd</command>, requests kernel events, manages
    the event queue, and provides simple debugging mechanisms.</para>
  </refsect1>

  <refsect1>
    <title>Options</title>

    <variablelist>
      <varlistentry>
        <term><option>-d</option></term>
        <term><option>--debug</option></term>
        <listitem>
          <para>Print debug messages to standard error. This option is implied in <command>udevadm test</command> and
          <command>udevadm test-builtin</command> commands.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-V</option></term>
        <term><option>--version</option></term>
        <xi:include href="standard-options.xml" xpointer="version-text" />
      </varlistentry>

      <xi:include href="standard-options.xml" xpointer="help" />
    </variablelist>

    <refsect2>
      <title>udevadm info
      <optional><replaceable>options</replaceable>…</optional>
      <optional><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable>…</optional>
      </title>

      <para>Query the udev database for device information.</para>

      <para>Positional arguments should be used to specify one or more devices. Each one may be a device name
      (in which case it must start with <filename>/dev/</filename>), a sys path (in which case it must start
      with <filename>/sys/</filename>), a device ID (such as <literal>n1</literal>, <literal>c5:1</literal>,
      or <literal>b259:1</literal>, see
      <citerefentry><refentrytitle>sd_device_get_device_id</refentrytitle><manvolnum>3</manvolnum></citerefentry>).
      or a systemd device unit name (in which case it must end with <literal>.device</literal>, see
      <citerefentry><refentrytitle>systemd.device</refentrytitle><manvolnum>5</manvolnum></citerefentry>).
      </para>

      <variablelist>
        <varlistentry>
          <term><option>-q</option></term>
          <term><option>--query=<replaceable>TYPE</replaceable></option></term>
          <listitem>
            <para>Query the database for the specified type of device data.
            Valid <replaceable>TYPE</replaceable>s are:
            <constant>name</constant>, <constant>symlink</constant>,
            <constant>path</constant>, <constant>property</constant>,
            <constant>all</constant>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--property=<replaceable>NAME</replaceable></option></term>
          <listitem>
            <para>When showing device properties using the <option>--query=property</option>
            option, limit display to properties specified in the argument. The argument should
            be a comma-separated list of property names. If not specified, all known properties
            are shown.</para>

            <xi:include href="version-info.xml" xpointer="v250"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--value</option></term>
          <listitem>
            <para>When showing device properties using the <option>--query=property</option>
            option, print only their values, and skip the property name and <literal>=</literal>.</para>
            <para>Cannot be used together with <option>-x/--export</option> or
            <option>-P/--export-prefix</option>.</para>

            <xi:include href="version-info.xml" xpointer="v250"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-p</option></term>
          <term><option>--path=<replaceable>DEVPATH</replaceable></option></term>
          <listitem>
            <para>The <filename>/sys/</filename> path of the device to query, e.g.
            <filename><optional>/sys/</optional>/class/block/sda</filename>. This option is an alternative to
            the positional argument with a <filename>/sys/</filename> prefix. <command>udevadm info
            --path=/class/block/sda</command> is equivalent to <command>udevadm info
            /sys/class/block/sda</command>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-n</option></term>
          <term><option>--name=<replaceable>FILE</replaceable></option></term>
          <listitem>
            <para>The name of the device node or a symlink to query,
            e.g. <filename><optional>/dev/</optional>/sda</filename>. This option is an alternative to the
            positional argument with a <filename>/dev/</filename> prefix. <command>udevadm info
            --name=sda</command> is equivalent to <command>udevadm info /dev/sda</command>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-r</option></term>
          <term><option>--root</option></term>
          <listitem>
            <para>Print absolute paths in <command>name</command> or <command>symlink</command>
            query.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-a</option></term>
          <term><option>--attribute-walk</option></term>
          <listitem>
            <para>Print all sysfs properties of the specified device that can be used
            in udev rules to match the specified device. It prints all devices
            along the chain, up to the root of sysfs that can be used in udev rules.</para>

            <para>This switch supports JSON output mode (see <option>--json=</option> below). Note that
            because this switch generates multiple JSON objects, JSON-SEQ mode is automatically enabled
            (RFC7464). (Note: tools such as <ulink url="https://jqlang.github.io/jq/manual/">jq</ulink>
            natively support JSON-SEQ via the <option>--seq</option> switch.)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--tree</option></term>
          <listitem>
            <para>Display a sysfs tree. This recursively iterates through the sysfs hierarchy and displays it
            in a tree structure. If a path is specified only the subtree below and its parent directories are
            shown. This will show both device and subsystem items.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-x</option></term>
          <term><option>--export</option></term>
          <listitem>
            <para>Print output as key/value pairs. Values are enclosed in single quotes.
            This takes effects only when <option>--query=property</option> or
            <option>--device-id-of-file=<replaceable>FILE</replaceable></option> is specified.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-P</option></term>
          <term><option>--export-prefix=<replaceable>NAME</replaceable></option></term>
          <listitem>
            <para>Add a prefix to the key name of exported values.
            This implies <option>--export</option>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-d</option></term>
          <term><option>--device-id-of-file=<replaceable>FILE</replaceable></option></term>
          <listitem>
            <para>Print major/minor numbers of the underlying device, where the file lives on.
            If this is specified, all positional arguments are ignored.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-e</option></term>
          <term><option>--export-db</option></term>
          <listitem>
            <para>Export the content of the udev database.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-c</option></term>
          <term><option>--cleanup-db</option></term>
          <listitem>
            <para>Cleanup the udev database.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-w<optional>SECONDS</optional></option></term>
          <term><option>--wait-for-initialization<optional>=SECONDS</optional></option></term>
          <listitem>
            <para>Wait for device to be initialized. If argument <replaceable>SECONDS</replaceable>
            is not specified, the default is to wait forever.</para>

            <xi:include href="version-info.xml" xpointer="v243"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--subsystem-match<optional>=SUBSYSTEM</optional></option></term>
          <term><option>--subsystem-nomatch<optional>=SUBSYSTEM</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices of or not of the given
            subsystem respectively.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--attr-match<optional>=FILE[=VALUE]</optional></option></term>
          <term><option>--attr-nomatch<optional>=FILE[=VALUE]</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices matching or not matching the
            given attribute respectively.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--property-match<optional>=KEY=VALUE</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices matching the given property
            and value.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--tag-match<optional>=TAG</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices with the given tag.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--sysname-match<optional>=NAME</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices with the given
            <literal>/sys</literal> path.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--name-match<optional>=NAME</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices with the given name in
            <literal>/dev</literal>.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--parent-match<optional>=NAME</optional></option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices with the given parent
            device.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--initialized-match</option></term>
          <term><option>--initialized-nomatch</option></term>
          <listitem>
            <para>When used with <option>--export-db</option>, only show devices that are initialized or not
            initialized respectively.</para>

            <xi:include href="version-info.xml" xpointer="v255"/>
          </listitem>
        </varlistentry>

        <xi:include href="standard-options.xml" xpointer="json" />
        <xi:include href="standard-options.xml" xpointer="no-pager" />
      </variablelist>

      <para>The generated output shows the current device database entry in a terse format. Each line shown
      is prefixed with one of the following characters:</para>

      <table>
        <title><command>udevadm info</command> output prefixes</title>
        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
          <colspec colname="prefix" />
          <colspec colname="meaning" />
          <thead>
            <row>
              <entry>Prefix</entry>
              <entry>Meaning</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><literal>P:</literal></entry>
              <entry>Device path in <filename>/sys/</filename></entry>
            </row>
            <row>
              <entry><literal>M:</literal></entry>
              <entry>Device name in <filename>/sys/</filename> (i.e. the last component of <literal>P:</literal>)</entry>
            </row>
            <row>
              <entry><literal>R:</literal></entry>
              <entry>Device number in <filename>/sys/</filename> (i.e. the numeric suffix of the last component of <literal>P:</literal>)</entry>
            </row>
            <row>
              <entry><literal>J:</literal></entry>
              <entry>Device ID</entry>
            </row>
            <row>
              <entry><literal>U:</literal></entry>
              <entry>Kernel subsystem</entry>
            </row>
            <row>
              <entry><literal>B:</literal></entry>
              <entry>Driver subsystem</entry>
            </row>
            <row>
              <entry><literal>T:</literal></entry>
              <entry>Kernel device type within subsystem</entry>
            </row>
            <row>
              <entry><literal>D:</literal></entry>
              <entry>Kernel device node major/minor</entry>
            </row>
            <row>
              <entry><literal>I:</literal></entry>
              <entry>Network interface index</entry>
            </row>
            <row>
              <entry><literal>N:</literal></entry>
              <entry>Kernel device node name</entry>
            </row>
            <row>
              <entry><literal>L:</literal></entry>
              <entry>Device node symlink priority</entry>
            </row>
            <row>
              <entry><literal>S:</literal></entry>
              <entry>Device node symlink</entry>
            </row>
            <row>
              <entry><literal>Q:</literal></entry>
              <entry>Block device sequence number (DISKSEQ)</entry>
            </row>
            <row>
              <entry><literal>V:</literal></entry>
              <entry>Attached driver</entry>
            </row>
            <row>
              <entry><literal>E:</literal></entry>
              <entry>Device property</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </refsect2>

    <refsect2>
      <title>udevadm trigger
      <optional><replaceable>options</replaceable>…</optional>
      <optional><replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable>…</optional>
      </title>

      <para>Request device events from the kernel. Primarily used to replay events at system coldplug time.</para>

      <para>Takes device specifications as positional arguments. See the description of
      <command>udevadm info</command> above.</para>

      <variablelist>
        <varlistentry>
          <term><option>-v</option></term>
          <term><option>--verbose</option></term>
          <listitem>
            <para>Print the list of devices which will be triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-n</option></term>
          <term><option>--dry-run</option></term>
          <listitem>
            <para>Do not actually trigger the event.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-q</option></term>
          <term><option>--quiet</option></term>
          <listitem>
            <para>Suppress error logging in triggering events.</para>

            <xi:include href="version-info.xml" xpointer="v248"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--type=<replaceable>TYPE</replaceable></option></term>
          <listitem>
            <para>Trigger a specific type of devices. Valid types are <literal>all</literal>,
            <literal>devices</literal>, and <literal>subsystems</literal>. The default value is
            <literal>devices</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-c</option></term>
          <term><option>--action=<replaceable>ACTION</replaceable></option></term>
          <listitem>
            <para>Type of event to be triggered. Possible actions are <literal>add</literal>,
            <literal>remove</literal>, <literal>change</literal>, <literal>move</literal>,
            <literal>online</literal>, <literal>offline</literal>, <literal>bind</literal>,
            and <literal>unbind</literal>. Also, the special value <literal>help</literal> can be used
            to list the possible actions. The default value is <literal>change</literal>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--prioritized-subsystem=<replaceable>SUBSYSTEM<optional>,<replaceable>SUBSYSTEM</replaceable>…</optional></replaceable></option></term>
          <listitem>
            <para>Takes a comma separated list of subsystems. When triggering events for devices, the
            devices from the specified subsystems and their parents are triggered first. For example,
            if <option>--prioritized-subsystem=block,net</option>, then firstly all block devices and
            their parents are triggered, in the next all network devices and their parents are
            triggered, and lastly the other devices are triggered. This option can be specified
            multiple times, and in that case the lists of the subsystems will be merged. That is,
            <option>--prioritized-subsystem=block --prioritized-subsystem=net</option> is equivalent to
            <option>--prioritized-subsystem=block,net</option>.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-s</option></term>
          <term><option>--subsystem-match=<replaceable>SUBSYSTEM</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices which belong to a
            matching subsystem. This option supports shell style pattern matching.
            When this option is specified more than once, then each matching result is ORed, that is,
            all the devices in each subsystem are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-S</option></term>
          <term><option>--subsystem-nomatch=<replaceable>SUBSYSTEM</replaceable></option></term>
          <listitem>
            <para>Do not trigger events for devices which belong to a matching subsystem. This option
            supports shell style pattern matching. When this option is specified more than once,
            then each matching result is ANDed, that is, devices which do not match all specified
            subsystems are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-a</option></term>
          <term><option>--attr-match=<replaceable>ATTRIBUTE</replaceable>=<replaceable>VALUE</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices with a matching sysfs attribute. If a value is specified along
            with the attribute name, the content of the attribute is matched against the given value using
            shell style pattern matching. If no value is specified, the existence of the sysfs attribute is
            checked. When this option is specified multiple times, then each matching result is ANDed,
            that is, only devices which have all specified attributes are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-A</option></term>
          <term><option>--attr-nomatch=<replaceable>ATTRIBUTE</replaceable>=<replaceable>VALUE</replaceable></option></term>
          <listitem>
            <para>Do not trigger events for devices with a matching sysfs attribute. If a value is specified
            along with the attribute name, the content of the attribute is matched against the given value
            using shell style pattern matching. If no value is specified, the existence of the sysfs attribute
            is checked. When this option is specified multiple times, then each matching result is ANDed,
            that is, only devices which have none of the specified attributes are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-p</option></term>
          <term><option>--property-match=<replaceable>PROPERTY</replaceable>=<replaceable>VALUE</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices with a matching property value. This option supports shell style
            pattern matching. When this option is specified more than once, then each matching result is ORed,
            that is, devices which have one of the specified properties are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-g</option></term>
          <term><option>--tag-match=<replaceable>TAG</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices with a matching tag. When this option is specified multiple times,
            then each matching result is ANDed, that is, devices which have all specified tags are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-y</option></term>
          <term><option>--sysname-match=<replaceable>NAME</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices for which the last component (i.e. the filename) of the
            <filename>/sys/</filename> path matches the specified <replaceable>PATH</replaceable>. This option
            supports shell style pattern matching. When this option is specified more than once, then each
            matching result is ORed, that is, all devices which have any of the specified
            <replaceable>NAME</replaceable> are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--name-match=<replaceable>NAME</replaceable></option></term>
          <listitem>
            <para>Trigger events for devices with a matching device path. When this option is specified more than once,
            then each matching result is ORed, that is, all specified devices are triggered.</para>

            <xi:include href="version-info.xml" xpointer="v218"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-b</option></term>
          <term><option>--parent-match=<replaceable>SYSPATH</replaceable></option></term>
          <listitem>
            <para>Trigger events for all children of a given device. When this option is specified more than once,
            then each matching result is ORed, that is, all children of each specified device are triggered.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--initialized-match</option></term>
          <term><option>--initialized-nomatch</option></term>
          <listitem>
            <para>When <option>--initialized-match</option> is specified, trigger events for devices
            that are already initialized by <command>systemd-udevd</command>, and skip devices that
            are not initialized yet.</para>
            <para>When <option>--initialized-nomatch</option> is specified, trigger events for devices
            that are not initialized by <command>systemd-udevd</command> yet, and skip devices that
            are already initialized.</para>
            <para>Typically, it is essential that applications which intend to use such a match, make
            sure a suitable udev rule is installed that sets at least one property on devices that
            shall be matched. See also Initialized Devices section below for more details.</para>
            <warning>
              <para><option>--initialized-nomatch</option> can potentially save a significant
              amount of time compared to re-triggering all devices in the system and e.g. can be used to
              optimize boot time. However, this is not safe to be used in a boot sequence in general.
              Especially, when udev rules for a device depend on its parent devices (e.g.
              <literal>ATTRS</literal> or <literal>IMPORT{parent}</literal> keys, see
              <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry>
              for more details), the final state of the device becomes easily unstable with this option.
              </para>
            </warning>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--include-parents</option></term>
          <listitem>
            <para>Trigger parent devices of found devices even if the parents
            will not match the filter condition.
            This is useful if we are interested to limit the coldplug activities to
            some devices or subsystems.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-w</option></term>
          <term><option>--settle</option></term>
          <listitem>
            <para>Apart from triggering events, also waits for those events to
            finish. Note that this is different from calling <command>udevadm
            settle</command>. <command>udevadm settle</command> waits for all
            events to finish. This option only waits for events triggered by
            the same command to finish.</para>

            <xi:include href="version-info.xml" xpointer="v238"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--uuid</option></term>
          <listitem>
            <para>Trigger the synthetic device events, and associate a randomized UUID with each. These UUIDs
            are printed to standard output, one line for each event. These UUIDs are included in the uevent
            environment block (in the <literal>SYNTH_UUID=</literal> property) and may be used to track
            delivery of the generated events.</para>

            <xi:include href="version-info.xml" xpointer="v249"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--wait-daemon[=<replaceable>SECONDS</replaceable>]</option></term>
          <listitem>
            <para>Before triggering uevents, wait for systemd-udevd daemon to be initialized.
            Optionally takes timeout value. Default timeout is 5 seconds. This is equivalent to invoking
            <command>udevadm control --ping</command> before <command>udevadm trigger</command>.</para>

            <xi:include href="version-info.xml" xpointer="v241"/>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>In addition, optional positional arguments can be used
      to specify device names or sys paths. They must start with
      <filename>/dev/</filename> or <filename>/sys/</filename>
      respectively.</para>
    </refsect2>

    <refsect2>
      <title>udevadm settle
      <optional><replaceable>options</replaceable>…</optional>
      </title>

      <para>Watches the udev event queue, and exits if all current events are handled.</para>

      <variablelist>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--timeout=<replaceable>SECONDS</replaceable></option></term>
          <listitem>
            <para>Maximum number of seconds to wait for the event
            queue to become empty. The default value is 120 seconds. A
            value of 0 will check if the queue is empty and always
            return immediately. A non-zero value will return an exit
            code of 0 if queue became empty before timeout was reached,
            non-zero otherwise.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-E</option></term>
          <term><option>--exit-if-exists=<replaceable>FILE</replaceable></option></term>
          <listitem>
            <para>Stop waiting if file exists.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>See
      <citerefentry><refentrytitle>systemd-udev-settle.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>
      for more information.</para>
    </refsect2>

    <refsect2>
      <title>udevadm control <replaceable>options</replaceable>…</title>

      <para>Modify the internal state of the running udev daemon.</para>

      <variablelist>
        <varlistentry>
          <term><option>-e</option></term>
          <term><option>--exit</option></term>
          <listitem>
            <para>Signal and wait for systemd-udevd to exit. No option except for
            <option>--timeout</option> can be specified after this option.
            Note that <filename>systemd-udevd.service</filename> contains
            <option>Restart=always</option> and so as a result, this option restarts systemd-udevd.
            If you want to stop <filename>systemd-udevd.service</filename>, please use the following:
            <programlisting>systemctl stop systemd-udevd-control.socket systemd-udevd-kernel.socket systemd-udevd-varlink.socket systemd-udevd.service</programlisting>
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-l</option></term>
          <term><option>--log-level=<replaceable>value</replaceable></option></term>
          <listitem>
            <para>Set the internal log level of
            <filename>systemd-udevd</filename>. Valid values are the
            numerical syslog priorities or their textual
            representations: <option>emerg</option>,
            <option>alert</option>, <option>crit</option>,
            <option>err</option>, <option>warning</option>,
            <option>notice</option>, <option>info</option>, and
            <option>debug</option>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-s</option></term>
          <term><option>--stop-exec-queue</option></term>
          <listitem>
            <para>Signal systemd-udevd to stop executing new events. Incoming events
            will be queued.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-S</option></term>
          <term><option>--start-exec-queue</option></term>
          <listitem>
            <para>Signal systemd-udevd to enable the execution of events.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-R</option></term>
          <term><option>--reload</option></term>
          <listitem>
            <para>Signal systemd-udevd to reload the rules files and other databases like the kernel
            module index. Reloading rules and databases does not apply any changes to already
            existing devices; the new configuration will only be applied to new events.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-p</option></term>
          <term><option>--property=<replaceable>KEY</replaceable>=<replaceable>value</replaceable></option></term>
          <listitem>
            <para>Set a global property for all events.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-m</option></term>
          <term><option>--children-max=<replaceable>value</replaceable></option></term>
          <listitem>
            <para>Set the maximum number of events, systemd-udevd will handle at the same time. When 0 is
            specified, then the maximum is determined based on the system resources.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--ping</option></term>
          <listitem>
            <para>Send a ping message to systemd-udevd and wait for the reply. This may be useful to check that
            systemd-udevd daemon is running.</para>

            <xi:include href="version-info.xml" xpointer="v241"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--trace=<replaceable>BOOL</replaceable></option></term>
          <listitem>
            <para>Enable/disable trace logging in <command>systemd-udevd</command>.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>--revert</option></term>
          <listitem>
            <para>Revert settings previously set with <command>udevadm control</command> command. When
            specified, settings set with <option>-l/--log-level=</option>, <option>--trace</option>,
            <option>-m/--children-max=</option>, and <option>-p/--property=</option> will be cleared.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--timeout=<replaceable>seconds</replaceable></option></term>
          <listitem>
            <para>The maximum number of seconds to wait for a reply from systemd-udevd.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--load-credentials</option></term>
          <listitem>
            <para>When specified, the following credentials are used when passed in:</para>

            <variablelist>
              <varlistentry>
                <term><varname>udev.conf.*</varname></term>
                <listitem>
                  <para>These credentials should contain valid
                  <citerefentry><refentrytitle>udev.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
                  configuration data. From each matching credential a separate file is created. Example: a
                  passed credential <filename>udev.conf.50-foobar</filename> will be copied into a
                  configuration file <filename>/run/udev/udev.conf.d/50-foobar.conf</filename>.</para>

                  <xi:include href="version-info.xml" xpointer="v256"/>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>udev.rules.*</varname></term>
                <listitem>
                  <para>These credentials should contain valid
                  <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry>
                  rules. From each matching credential a separate file is created. Example: a passed credential
                  <filename>udev.rules.50-foobar</filename> will be copied into a configuration file
                  <filename>/run/udev/rules.d/50-foobar.rules</filename>.</para>

                  <xi:include href="version-info.xml" xpointer="v256"/>
                </listitem>
              </varlistentry>
            </variablelist>

            <para>Note, this <emphasis>does not</emphasis> imply <option>--reload</option> option. So, if
            <command>systemd-udevd</command> is already running, please consider to also specify
            <option>-reload</option> to make the copied udev rules files used by
            <command>systemd-udevd</command>.</para>

            <xi:include href="version-info.xml" xpointer="v256"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm monitor
      <optional><replaceable>options</replaceable>…</optional>
      </title>

      <para>Listens to the kernel uevents and events sent out by a udev rule
      and prints the devpath of the event to the console. It can be used to analyze the
      event timing, by comparing the timestamps of the kernel uevent and the udev event.
      </para>

      <variablelist>
        <varlistentry>
          <term><option>-k</option></term>
          <term><option>--kernel</option></term>
          <listitem>
            <para>Print the kernel uevents.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-u</option></term>
          <term><option>--udev</option></term>
          <listitem>
            <para>Print the udev event after the rule processing.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-p</option></term>
          <term><option>--property</option></term>
          <listitem>
            <para>Also print the properties of the event.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-s</option></term>
          <term><option>--subsystem-match=<replaceable>string[/string]</replaceable></option></term>
          <listitem>
            <para>Filter kernel uevents and udev events by subsystem[/devtype]. Only events with a matching subsystem value will pass.
            When this option is specified more than once, then each matching result is ORed, that is, all devices in the specified
            subsystems are monitored.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--tag-match=<replaceable>string</replaceable></option></term>
          <listitem>
            <para>Filter udev events by tag. Only udev events with a given tag attached will pass.
            When this option is specified more than once, then each matching result is ORed, that is, devices which have one of the
            specified tags are monitored.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm test
      <optional><replaceable>options</replaceable>…</optional>
      <replaceable>devpath</replaceable>|<replaceable>syspath</replaceable>|<replaceable>id</replaceable>|<replaceable>unit</replaceable>
      </title>

      <para>
        Simulate a udev event run for the given device, and print debug output. The option
        <option>--json=</option> may be useful for parsing the final result. See also Example section.
      </para>

      <variablelist>
        <varlistentry>
          <term><option>-a</option></term>
          <term><option>--action=<replaceable>ACTION</replaceable></option></term>
          <listitem>
            <para>Type of event to be simulated. Possible actions are <literal>add</literal>,
            <literal>remove</literal>, <literal>change</literal>, <literal>move</literal>,
            <literal>online</literal>, <literal>offline</literal>, <literal>bind</literal>,
            and <literal>unbind</literal>. Also, the special value <literal>help</literal> can be used
            to list the possible actions. The default value is <literal>add</literal>.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-N</option></term>
          <term><option>--resolve-names=<constant>early</constant>|<constant>late</constant>|<constant>never</constant></option></term>
          <listitem>
            <para>Specify when <command>udevadm</command> should resolve names of users and groups specified
            in udev rules. When set to <constant>early</constant> (the default), names will be resolved when
            the rules are parsed. When set to <constant>late</constant>, names will be resolved during the
            event being processed. When set to <constant>never</constant>, names will never be resolved and
            relevant udev rules will be ignored.</para>

            <xi:include href="version-info.xml" xpointer="v209"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-D <replaceable>DIR</replaceable></option></term>
          <term><option>--extra-rules-dir=<replaceable>DIR</replaceable></option></term>
          <listitem>
            <para>Also load udev rules files from the specified directory. This option can be specified
            multiple times. It may be useful for debugging udev rules by copying some udev rules files to a
            temporary directory, editing them, and specifying the directory with this option. Files found in
            the specified directories have a higher priority than rules files in the default
            <filename>udev/rules.d</filename> directories used by <command>systemd-udevd</command>. See
            <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry> for more
            details about the search paths.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>-v</option></term>
          <term><option>--verbose</option></term>
          <listitem>
            <para>Shows verbose logs in processing udev rules.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>

        <xi:include href="standard-options.xml" xpointer="json" />
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm test-builtin
      <optional><replaceable>options</replaceable>…</optional>
      <replaceable>command</replaceable>
      <replaceable>devpath</replaceable>|<replaceable>file</replaceable>|<replaceable>unit</replaceable>
      </title>

      <para>Run a built-in command <replaceable>COMMAND</replaceable>
      for device <replaceable>DEVPATH</replaceable>, and print debug
      output.</para>

      <variablelist>
        <varlistentry>
          <term><option>-a</option></term>
          <term><option>--action=<replaceable>ACTION</replaceable></option></term>
          <listitem>
            <para>Type of event to be simulated. Possible actions are <literal>add</literal>,
            <literal>remove</literal>, <literal>change</literal>, <literal>move</literal>,
            <literal>online</literal>, <literal>offline</literal>, <literal>bind</literal>,
            and <literal>unbind</literal>. Also, the special value <literal>help</literal> can be used
            to list the possible actions. The default value is <literal>add</literal>.</para>

            <xi:include href="version-info.xml" xpointer="v250"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm verify
      <optional><replaceable>options</replaceable>…</optional>
      <optional><replaceable>files</replaceable>…</optional>
      </title>

      <para>Verify syntactic, semantic, and stylistic correctness of udev rules files.</para>

      <para>Positional arguments can be used to specify one or more files to check. Each argument must be an
      absolute path to a udev rules file or a directory that contains rules files, or a file name of udev
      rules file (e.g. <filename>99-systemd.rules</filename>). If a file name is specified, the file will be
      searched in the <filename>udev/rules.d</filename> directories that are processed by
      <command>systemd-udevd</command>, and searched in the current working directory if not found. If no
      files are specified, the udev rules are read from the files located in the same
      <filename>udev/rules.d</filename> directories that are processed by <command>systemd-udevd</command>.
      See <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry> for more
      details about the search paths.</para>

      <para>The exit status is <constant>0</constant> if all specified udev
      rules files are syntactically, semantically, and stylistically correct,
      and a non-zero error code otherwise.</para>

      <variablelist>
        <varlistentry>
          <term><option>-N</option></term>
          <term><option>--resolve-names=<constant>early</constant>|<constant>late</constant>|<constant>never</constant></option></term>
          <listitem>
            <para>Specify when <command>udevadm</command> should resolve names of users and groups specified
            in udev rules. When set to <constant>early</constant> (the default), names will be resolved when
            the rules are parsed. When set to <constant>late</constant>, names will not be verified, as
            <command>systemd-udevd</command> resolves names during each event being processed. When set to
            <constant>never</constant>, names will never be resolved and relevant rules will be ignored.
            </para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--root=<replaceable>PATH</replaceable></option></term>
          <listitem>
            <para>When looking for udev rules files located in the <filename>udev/rules.d</filename>
            directories, operate on files underneath the specified root path <replaceable>PATH</replaceable>.
            When a file name is specified, and it is not found in the <filename>udev/rules.d</filename>
            directories, the file will be searched in the specified root path
            <replaceable>PATH</replaceable>, rather than the current working directory.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-summary</option></term>
          <listitem>
            <para>Do not show summary.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-style</option></term>
          <listitem>
            <para>Ignore style issues. When specified, even if style issues are found in udev rules files,
            the exit status is <constant>0</constant> if no syntactic or semantic errors are found.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm cat
      <optional><replaceable>options</replaceable>…</optional>
      <optional><replaceable>file</replaceable>…</optional>
      </title>

      <para>Show udev rules files or udev.conf.</para>

      <para>Positional arguments can be used to specify one or more files to show. Each argument must be an
      absolute path to a udev rules file or a directory that contains rules files, or a file name of udev
      rules file (e.g. <filename>99-systemd.rules</filename>). If a file name is specified, the file will be
      searched in the <filename>udev/rules.d</filename> directories that are processed by
      <command>systemd-udevd</command>, and searched in the current working directory if not found. If no
      files are specified, the udev rules are read from the files located in the same
      <filename>udev/rules.d</filename> directories that are processed by <command>systemd-udevd</command>.
      See <citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry> for more
      details about the search paths.</para>

      <variablelist>
        <varlistentry>
          <term><option>--root=<replaceable>PATH</replaceable></option></term>
          <listitem>
            <para>When looking for udev rules files located in the <filename>udev/rules.d</filename>
            directories, operate on files underneath the specified root path <replaceable>PATH</replaceable>.
            When a file name is specified, and it is not found in the <filename>udev/rules.d</filename>
            directories, the file will be searched in the specified root path
            <replaceable>PATH</replaceable>, rather than the current working directory.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--tldr</option></term>
          <listitem>
            <para>Only print the "interesting" parts of the configuration files, skipping comments and empty
            lines and section headers followed only by comments and empty lines.</para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--config</option></term>
          <listitem>
            <para>Shows
            <citerefentry><refentrytitle>udev.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
            files, rather than udev rules files. When specified, no udev rules file cannot be specified.
            </para>

            <xi:include href="version-info.xml" xpointer="v258"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm wait
      <optional><replaceable>options</replaceable>…</optional>
      <replaceable>devpath|syspath</replaceable>…
      </title>

      <para>Wait for devices or device symlinks being created and initialized by
      <command>systemd-udevd</command>. Each device path must start with
      <literal>/dev/</literal> or <literal>/sys/</literal>, e.g. <literal>/dev/sda</literal>,
      <literal>/dev/disk/by-path/pci-0000:3c:00.0-nvme-1-part1</literal>,
      <literal>/sys/devices/pci0000:00/0000:00:1f.6/net/eth0</literal>, or
      <literal>/sys/class/net/eth0</literal>. This can take multiple devices. This may be useful for
      waiting for devices being processed by <command>systemd-udevd</command> after e.g. partitioning
      or formatting the devices.</para>

      <variablelist>
        <varlistentry>
          <term><option>-t</option></term>
          <term><option>--timeout=<replaceable>SECONDS</replaceable></option></term>
          <listitem>
            <para>Maximum number of seconds to wait for the specified devices or device symlinks being
            created, initialized, or removed. The default value is <literal>infinity</literal>.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--initialized=<replaceable>BOOL</replaceable></option></term>
          <listitem>
            <para>Check if <command>systemd-udevd</command> initialized devices. Defaults to true. When
            false, the command only checks if the specified devices exist. Set false to this setting if
            there is no udev rules for the specified devices, as the devices will never be considered
            as initialized in that case. See Initialized Devices section below for more details.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--removed</option></term>
          <listitem>
            <para>When specified, the command wait for devices being removed instead of created or
            initialized. If this is specified, <option>--initialized=</option> will be ignored.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--settle</option></term>
          <listitem>
            <para>When specified, also watches the udev event queue, and wait for all queued events
            being processed by <command>systemd-udevd</command>.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>

    <refsect2>
      <title>udevadm lock
      <optional><replaceable>options</replaceable>…</optional>
      <replaceable>command</replaceable>…
      </title>

      <para><command>udevadm lock</command> takes an (advisory) exclusive lock on a block device (or all
      specified devices), as per <ulink url="https://systemd.io/BLOCK_DEVICE_LOCKING">Locking Block Device
      Access</ulink> and invokes a program with the locks taken. When the invoked program exits the locks
      are automatically released and its return value is propagated as exit code of <command>udevadm
      lock</command>.</para>

      <para>This tool is in particular useful to ensure that
      <citerefentry><refentrytitle>systemd-udevd.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>
      does not probe a block device while changes are made to it, for example partitions created or file
      systems formatted. Note that many tools that interface with block devices natively support taking
      relevant locks, see for example
      <citerefentry project='man-pages'><refentrytitle>sfdisk</refentrytitle><manvolnum>8</manvolnum></citerefentry>'s
      <option>--lock</option> switch.</para>

      <para>The command expects at least one block device specified via <option>--device=</option> or
      <option>--backing=</option>, and a command line to execute as arguments.</para>

      <variablelist>
        <varlistentry>
          <term><option>--device=<replaceable>DEVICE</replaceable></option></term>
          <term><option>-d <replaceable>DEVICE</replaceable></option></term>

          <listitem>
            <para>Takes a path to a device node of the device to lock. This switch may be used
            multiple times (and in combination with <option>--backing=</option>) in order to lock multiple
            devices. If a partition block device node is specified the containing "whole" block device is
            automatically determined and used for the lock, as per the specification. If multiple devices are
            specified, they are deduplicated, sorted by the major/minor of their device nodes and then locked
            in order.</para>

            <para>This switch must be used at least once, to specify at least one device to
            lock. (Alternatively, use <option>--backing=</option>, see below.)</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--backing=<replaceable>PATH</replaceable></option></term>
          <term><option>-b <replaceable>PATH</replaceable></option></term>

          <listitem>
            <para>If a path to a device node is specified, identical to
            <option>--device=</option>. However, this switch alternatively accepts a path to a regular file or
            directory, in which case the block device of the file system the file/directory resides on is
            automatically determined and used as if it was specified with
            <option>--device=</option>.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--timeout=<replaceable>SECS</replaceable></option></term>
          <term><option>-t <replaceable>SECS</replaceable></option></term>

          <listitem>
            <para>Specifies how long to wait at most until all locks can be taken. Takes a value in
            seconds, or in the usual supported time units, see
            <citerefentry><refentrytitle>systemd.time</refentrytitle><manvolnum>7</manvolnum></citerefentry>. If
            specified as zero the lock is attempted and if not successful the invocation will immediately
            fail. If passed as <literal>infinity</literal> (the default) the invocation will wait indefinitely
            until the lock can be acquired. If the lock cannot be taken in the specified time the specified
            command will not be executed and the invocation will fail.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--print</option></term>
          <term><option>-p</option></term>

          <listitem>
            <para>Instead of locking the specified devices and executing a command, just print the
            device paths that would be locked, and execute no command. This command is useful to determine
            the "whole" block device in case a partition block device is specified. The devices will be sorted
            by their device node major number as primary ordering key and the minor number as secondary
            ordering key (i.e. they are shown in the order they'd be locked). Note that the number of lines
            printed here can be less than the number of <option>--device=</option> and
            <option>--backing=</option> switches specified in case these resolve to the same "whole"
            devices.</para>

            <xi:include href="version-info.xml" xpointer="v251"/>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>Initialized Devices</title>

    <para>Initialized devices are those for which at least one udev rule already completed execution
    – for any action but <literal>remove</literal> — that set a property or other device setting (and
    thus has an entry in the udev device database). Devices are no longer considered initialized if a
    <literal>remove</literal> action is seen for them (which removes their entry in the udev device
    database). Note that devices that have no udev rules are never considered initialized, but might
    still be announced via the sd-device API (or similar).</para>
  </refsect1>

  <refsect1>
    <title>Example</title>

    <example>
      <title>Format a File System</title>

      <para>Take a lock on the backing block device while creating a file system, to ensure that
      <command>systemd-udevd</command> does not probe or announce the new superblock before it is
      comprehensively written:</para>

      <programlisting># udevadm lock --device=/dev/sda1 mkfs.ext4 /dev/sda1</programlisting>
    </example>

    <example>
      <title>Format a RAID File System</title>

      <para>Similar, but take locks on multiple devices at once:</para>

      <programlisting># udevadm lock --device=/dev/sda1 --device=/dev/sdb1 mkfs.btrfs /dev/sda1 /dev/sdb1</programlisting>
    </example>

    <example>
      <title>Copy in a File System</title>

      <para>Take a lock on the backing block device while copying in a prepared file system image, to ensure
      that <command>systemd-udevd</command> does not probe or announce the new superblock before it is fully
      written:</para>

      <programlisting># udevadm lock -d /dev/sda1 dd if=fs.raw of=/dev/sda1</programlisting>
    </example>

    <example>
      <title>Predict Network Interface Renaming</title>

      <para>To predict a network interface name, <command>udevadm test</command> can be used:</para>

      <programlisting>$ udevadm test /sys/class/net/wlan0 --json=pretty 2>/dev/null | jq .networkInterface.name
"wlp59s0"</programlisting>
    </example>

    <example>
      <title>Predict Symbolic links of a Device Node</title>

      <para>To predict symbolic links to a device node, <command>udevadm test</command> can be used:</para>

      <programlisting>$ udevadm test /dev/nvme0n1p1 --json=pretty 2>/dev/null | jq .node.symlinks
[
  "/dev/disk/by-diskseq/1-part1",
  "/dev/disk/by-id/nvme-WDC_PC_SN720_SDAQNTW-512G-1001_192290802247-part1",
  "/dev/disk/by-id/nvme-WDC_PC_SN720_SDAQNTW-512G-1001_192290802247_1-part1",
  "/dev/disk/by-id/nvme-eui.1922908022470001001b448b44ccb9d6-part1",
  "/dev/disk/by-path/pci-0000:3c:00.0-nvme-1-part/by-partnum/1",
  "/dev/disk/by-path/pci-0000:3c:00.0-nvme-1-part1"
]
$ udevadm test /dev/input/event3 --json=pretty 2>/dev/null | jq .node.symlinks
[
  "/dev/input/by-path/platform-i8042-serio-0-event-kbd"
]</programlisting>
    </example>

  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para><simplelist type="inline">
      <member><citerefentry><refentrytitle>udev</refentrytitle><manvolnum>7</manvolnum></citerefentry></member>
      <member><citerefentry><refentrytitle>systemd-udevd.service</refentrytitle><manvolnum>8</manvolnum></citerefentry></member>
      <member><citerefentry><refentrytitle>udev.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry></member>
    </simplelist></para>
  </refsect1>
</refentry>
