<?xml version='1.0'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- SPDX-License-Identifier: LGPL-2.1-or-later -->

<refentry id="kernel-install" conditional='ENABLE_KERNEL_INSTALL'
          xmlns:xi="http://www.w3.org/2001/XInclude">

  <refentryinfo>
    <title>kernel-install</title>
    <productname>systemd</productname>
  </refentryinfo>

  <refmeta>
    <refentrytitle>kernel-install</refentrytitle>
    <manvolnum>8</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>kernel-install</refname>
    <refpurpose>Add and remove kernel and initrd images to and from the boot partition</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>kernel-install</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">add</arg>
      <arg choice="plain"><replaceable>KERNEL-VERSION</replaceable></arg>
      <arg choice="plain"><replaceable>KERNEL-IMAGE</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>INITRD-FILE</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>kernel-install</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">add-all</arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>kernel-install</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">remove</arg>
      <arg choice="plain"><replaceable>KERNEL-VERSION</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>kernel-install</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">inspect</arg>
      <arg choice="opt"><replaceable>KERNEL-VERSION</replaceable></arg>
      <arg choice="opt"><replaceable>KERNEL-IMAGE</replaceable></arg>
      <arg choice="opt" rep="repeat"><replaceable>INITRD-FILE</replaceable></arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>kernel-install</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">list</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para><command>kernel-install</command> is used to install and remove kernel and initrd images
    <footnote>
      <para>Nowadays actually CPIO archives used as an "initramfs", rather than "initrd". See
      <citerefentry><refentrytitle>bootup</refentrytitle><manvolnum>7</manvolnum></citerefentry> for an
      explanation.</para>
    </footnote>
    to and from the boot partition, referred to as <varname>$BOOT</varname> here. It will usually be one of
    <filename>/boot/</filename>, <filename>/efi/</filename>, or <filename>/boot/efi/</filename>, see below.
    </para>

    <para><command>kernel-install</command> will run the executable files ("plugins") located in the
    directory <filename>/usr/lib/kernel/install.d/</filename> and the local administration directory
    <filename>/etc/kernel/install.d/</filename>.  All files are collectively sorted and executed in lexicographic
    order, regardless of the directory in which they live. However, files with identical filenames replace
    each other.  Files in <filename>/etc/kernel/install.d/</filename> take precedence over files with the
    same name in <filename>/usr/lib/kernel/install.d/</filename>. This can be used to override a
    system-supplied executables with a local file if needed; a symbolic link in
    <filename>/etc/kernel/install.d/</filename> with the same name as an executable in
    <filename>/usr/lib/kernel/install.d/</filename>, pointing to <filename>/dev/null</filename>, disables the
    executable entirely. Executables must have the extension <literal>.install</literal>; other extensions
    are ignored.</para>

    <para>An executable placed in these directories should return <constant>0</constant> on success. It may
    also return <constant>77</constant> to cause the whole operation to terminate (executables later in
    lexicographic order will be skipped).</para>
  </refsect1>

  <refsect1>
    <title>Commands</title>
    <para>The following commands are understood:</para>
    <variablelist>
      <varlistentry>
        <term><command>add [[[<replaceable>KERNEL-VERSION</replaceable>] <replaceable>KERNEL-IMAGE</replaceable>] [<replaceable>INITRD-FILE</replaceable> ...]]</command></term>

        <listitem>
          <para>This command takes a kernel version string and a path to a kernel image file as arguments. If
          the former is omitted, specified as an empty string or as "-" it defaults to the current kernel
          version, i.e. the same string <command>uname -r</command> returns. If the latter is omitted,
          specified as an empty string or as "-" defaults to
          <filename>/usr/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/vmlinuz</filename>. Optionally,
          one or more initrd images may be specified as well (note that plugins might generate additional
          ones).</para>

          <para>The executable files from <filename>/usr/lib/kernel/install.d/*.install</filename> and
          <filename>/etc/kernel/install.d/*.install</filename> (i.e. the plugins) are called with the
          following arguments:</para>

          <programlisting>add <replaceable>KERNEL-VERSION</replaceable> <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable>/</filename> <replaceable>KERNEL-IMAGE</replaceable> [<replaceable>INITRD-FILE</replaceable> ...]</programlisting>

          <para>The third argument directly refers to the path where to place kernel images, initrd
          images and other resources for
          <ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot
          Loader Specification</ulink> Type #1 entries (the "entry directory"). If other boot loader schemes
          are used the parameter may be ignored.</para>

          <para>The <replaceable>ENTRY-TOKEN</replaceable> string is typically the machine ID and is supposed
          to identify the local installation on the system. For details see below.</para>

          <para><command>kernel-install</command> creates
          <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable></filename>,
          if enabled (see <varname>$KERNEL_INSTALL_LAYOUT</varname>).</para>

          <para>Three default plugins execute the following operations in this case:</para>

          <variablelist>
            <varlistentry>
              <term><filename>50-depmod.install</filename></term>
              <listitem>
                <para>The plugin runs
                <citerefentry project='man-pages'><refentrytitle>depmod</refentrytitle><manvolnum>8</manvolnum></citerefentry>
                for the <replaceable>KERNEL-VERSION</replaceable>.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><filename>90-loaderentry.install</filename></term>
              <listitem>
                <para>The plugin copies <replaceable>KERNEL-IMAGE</replaceable> to
                <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable>/linux</filename>.
                If <replaceable>INITRD-FILE</replaceable>s are provided, it also copies them to
                <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL_VERSION</replaceable>/<replaceable>INITRD-FILE</replaceable></filename>.
                This can also be used to prepend microcode before the actual initrd. It also creates a boot
                loader entry according to the
                <ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot Loader Specification</ulink>
                (Type #1) in
                <filename>$BOOT/loader/entries/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.conf</filename>.
                The title of the entry is the <replaceable>PRETTY_NAME</replaceable> parameter specified in
                <filename>/etc/os-release</filename> or <filename>/usr/lib/os-release</filename> (if the
                former is missing), or "Linux <replaceable>KERNEL-VERSION</replaceable>", if unset.</para>

                <para>If <varname>$KERNEL_INSTALL_LAYOUT</varname> is not "bls", this plugin does nothing.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><filename>90-uki-copy.install</filename></term>
              <listitem>
                <para>If <varname>$KERNEL_INSTALL_STAGING_AREA/uki.efi</varname> exists, the plugin copies it
                to
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi</filename>.
                Also, files in <filename>$KERNEL_INSTALL_STAGING_AREA/uki.efi.extra.d"/</filename> are copied
                to
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi.extra.d/</filename>.</para>

                <para>If <varname>$KERNEL_INSTALL_STAGING_AREA/uki.efi</varname> does not exist, and the
                <replaceable>KERNEL-IMAGE</replaceable> argument has a <literal>.efi</literal> extension, the
                plugin copies the image to
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi</filename>.
                Also, files in <filename><replaceable>KERNEL-IMAGE</replaceable>.extra.d/</filename> and
                <filename>$KERNEL_INSTALL_STAGING_AREA/uki.efi.extra.d"/</filename> are copied to
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi.extra.d/</filename>.</para>

                <para>If <varname>$KERNEL_INSTALL_LAYOUT</varname> is not "uki", this plugin does nothing.</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <xi:include href="version-info.xml" xpointer="v198"/>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <command>add-all</command>
        </term>

        <listitem>
          <para>This is the same as <command>add</command> (see above), but invokes the operation iteratively
          for every installed kernel in <filename>/usr/lib/modules/</filename>. This operation is only
          supported on systems where the kernel image is installed in
          <filename>/usr/lib/modules/<replaceable>KERNEL-VERSION</replaceable>/vmlinuz</filename>.</para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>remove <replaceable>KERNEL-VERSION</replaceable></command></term>
        <listitem>
          <para>This command expects a kernel version string as single argument.</para>

          <para>The executable files from <filename>/usr/lib/kernel/install.d/*.install</filename> and
          <filename>/etc/kernel/install.d/*.install</filename> (i.e. the plugins) are called with the
          following arguments:</para>

          <programlisting>remove <replaceable>KERNEL-VERSION</replaceable> <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable>/</filename></programlisting>

          <para>Afterwards, <command>kernel-install</command> removes the entry directory
          <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable>/</filename>
          and its contents, if it exists.</para>

          <para>Three default plugins execute the following operations in this case:</para>

          <variablelist>
            <varlistentry>
              <term><filename>50-depmod.install</filename></term>
              <listitem>
                <para>The plugin removes the files generated by <command>depmod</command> for this kernel again.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><filename>90-loaderentry.install</filename></term>
              <listitem>
                <para>The plugin removes the file
                <filename>$BOOT/loader/entries/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.conf</filename>.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><filename>90-uki-copy.install</filename></term>
              <listitem>
                <para>The plugin removes the file
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi</filename> and
                <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>.efi.extra.d/</filename>
                directory including its contents.</para>
              </listitem>
            </varlistentry>
          </variablelist>

          <xi:include href="version-info.xml" xpointer="v198"/>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <command>inspect [[[<replaceable>KERNEL-VERSION</replaceable>] <replaceable>KERNEL-IMAGE</replaceable>] [<replaceable>INITRD-FILE</replaceable> ...]]</command>
        </term>
        <listitem>
          <para>Takes the same parameters as <command>add</command>.</para>

          <para>Shows the various paths and parameters configured or auto-detected. In particular shows the
          values of the various <varname>$KERNEL_INSTALL_*</varname> environment variables listed below, as
          they would be passed to plugins. The <option>--json</option> option can be used to get the output
          of this verb as a JSON object.</para>

          <xi:include href="version-info.xml" xpointer="v251"/>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>list</command></term>
        <listitem>
          <para>Shows the various installed kernels. This enumerates the subdirectories of
          <filename>/usr/lib/modules/</filename>, and shows whether a kernel image is installed there.</para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Compatibility with the kernel build system</title>

    <cmdsynopsis>
      <command>installkernel</command>
      <arg choice="opt" rep="repeat">OPTIONS</arg>
      <arg choice="plain">VERSION</arg>
      <arg choice="plain">VMLINUZ</arg>
      <arg choice="opt">MAP</arg>
      <arg choice="opt">INSTALLATION-DIR</arg>
    </cmdsynopsis>

    <para>When invoked as <command>installkernel</command>, this program accepts arguments as specified by
    the kernel build system's <command>make install</command> command. The <parameter>VERSION</parameter> and
    <parameter>VMLINUZ</parameter> parameters specify the kernel version and the kernel binary. The other two
    parameters (<parameter>MAP</parameter> and <parameter>INSTALLATION-DIR</parameter>) are currently
    ignored.
    </para>
  </refsect1>

  <refsect1>
    <title>The <varname>$BOOT</varname> partition</title>

    <para>The partition where the kernels and <ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot
    Loader Specification</ulink> snippets are located is called <varname>$BOOT</varname>.
    <command>kernel-install</command> determines the location of this partition by checking
    <filename>/efi/</filename>, <filename>/boot/</filename>, and <filename>/boot/efi/</filename> in turn. The
    first location where <filename>$BOOT/loader/entries/</filename> or
    <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/</filename> exists is used.</para>
  </refsect1>

  <refsect1>
    <title>Options</title>
    <para>The following options are understood:</para>

    <variablelist>
      <xi:include href="standard-options.xml" xpointer="esp-path"/>
      <xi:include href="standard-options.xml" xpointer="boot-path"/>

      <varlistentry>
        <term><option>--make-entry-directory=yes|no|auto</option></term>
        <listitem>
          <para>Controls creation and deletion of the
          <ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot Loader Specification</ulink>
          Type #1 entry directory on the file system containing resources such as kernel and initrd images
          during <option>add</option> and <option>remove</option>, respectively. The directory is named after
          the entry token, and is placed immediately below the boot root directory. When
          <literal>auto</literal>, the directory is created or removed only when the install layout is
          <literal>bls</literal>. Defaults to <literal>auto</literal>.</para>

          <xi:include href="version-info.xml" xpointer="v254"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--entry-type=type1|type2|all</option></term>

        <listitem>
          <para>
            Controls the type of entries handled by the command. This is typically useful when multiple types
            of boot entries with the same kernel version are installed, and only one should be removed. When
            <literal>type1</literal> or <literal>type2</literal> is specified, each plugin is invoked with
            <varname>$KERNEL_INSTALL_BOOT_ENTRY_TYPE</varname> environment variable with the specified
            value. When <literal>all</literal> is specified, the environment variable will not be set.
            Defaults to <literal>all</literal>.
          </para>

          <xi:include href="version-info.xml" xpointer="v258"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--entry-token=</option></term>

        <listitem>
          <para>Controls how to name and identify boot loader entries for this kernel installation or
          deletion. Takes one of <literal>auto</literal>, <literal>machine-id</literal>,
          <literal>os-id</literal>, <literal>os-image-id</literal>, or an arbitrary string prefixed by
          <literal>literal:</literal> as argument.</para>

          <para>If set to <option>machine-id</option> the entries are named after the machine ID of the
          running system (e.g. <literal>b0e793a9baf14b5fa13ecbe84ff637ac</literal>). See
          <citerefentry><refentrytitle>machine-id</refentrytitle><manvolnum>5</manvolnum></citerefentry> for
          details about the machine ID concept and file.</para>

          <para>If set to <option>os-id</option> the entries are named after the OS ID of the running system,
          i.e. the <varname>ID=</varname> field of
          <citerefentry><refentrytitle>os-release</refentrytitle><manvolnum>5</manvolnum></citerefentry>
          (e.g. <literal>fedora</literal>). Similarly, if set to <option>os-image-id</option> the entries are
          named after the OS image ID of the running system, i.e. the <varname>IMAGE_ID=</varname> field of
          <filename>os-release</filename> (e.g. <literal>vendorx-cashier-system</literal>).</para>

          <para>If set to <option>auto</option> (the default), the
          <filename>/etc/kernel/entry-token</filename> (or
          <filename>$KERNEL_INSTALL_CONF_ROOT/entry-token</filename>) file will be read if it exists, and the
          stored value used. Otherwise, if the local machine ID is initialized, it is used. Otherwise,
          <varname>IMAGE_ID=</varname> from <filename>os-release</filename> will be used, if set. Otherwise,
          <varname>ID=</varname> from <filename>os-release</filename> will be used, if set. Otherwise, a
          randomly generated machine ID is used.</para>

          <para>Using the machine ID for naming the entries is generally preferable, however there are cases
          where using the other identifiers is a good option. Specifically: if the identification data that
          the machine ID entails shall not be stored on the (unencrypted) <varname>$BOOT_ROOT</varname>
          partition, or if the ID shall be generated on first boot and is not known when the entries are
          prepared. Note that using the machine ID has the benefit that multiple parallel installations of
          the same OS can coexist on the same medium, and they can update their boot loader entries
          independently. When using another identifier (such as the OS ID or the OS image ID), parallel
          installations of the same OS would try to use the same entry name. To support parallel
          installations, the installer must use a different entry token when adding a second installation.
          </para>

          <xi:include href="version-info.xml" xpointer="v254"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-v</option></term>
        <term><option>--verbose</option></term>
        <listitem>
          <para>Output additional information about operations being performed.</para>

        <xi:include href="version-info.xml" xpointer="v242"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--root=<replaceable>root</replaceable></option></term>

        <listitem><para>Takes a directory path as an argument. All paths will be prefixed with the given
        alternate <replaceable>root</replaceable> path, including config search paths. This is useful to
        operate on a system image mounted to the specified directory instead of the host system
        itself.</para>

        <xi:include href="version-info.xml" xpointer="v255"/></listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--image=<replaceable>image</replaceable></option></term>

        <listitem><para>Takes a path to a disk image file or block device node. If specified, all operations
        are applied to the file system in the indicated disk image. This option is similar to
        <option>--root=</option>, but operates on file systems stored in disk images or block devices. The
        disk image should either contain just a file system or a set of file systems within a GPT partition
        table, following the <ulink url="https://uapi-group.org/specifications/specs/discoverable_partitions_specification">Discoverable Partitions
        Specification</ulink>. For further information on supported disk images, see
        <citerefentry><refentrytitle>systemd-nspawn</refentrytitle><manvolnum>1</manvolnum></citerefentry>'s
        switch of the same name.</para>

        <xi:include href="version-info.xml" xpointer="v255"/></listitem>
      </varlistentry>

      <xi:include href="standard-options.xml" xpointer="help" />
      <xi:include href="standard-options.xml" xpointer="version" />
      <xi:include href="standard-options.xml" xpointer="no-pager"/>
      <xi:include href="standard-options.xml" xpointer="json" />
      <xi:include href="standard-options.xml" xpointer="image-policy-open" />
      <xi:include href="standard-options.xml" xpointer="no-legend"/>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Environment variables</title>

    <refsect2>
      <title>Environment variables exported for plugins</title>

      <para>If <option>--verbose</option> is used, <varname>$KERNEL_INSTALL_VERBOSE=1</varname> will be
      exported for plugins. They may output additional logs in this case.</para>

      <para><varname>$KERNEL_INSTALL_IMAGE_TYPE=uki|pe|unknown</varname> is set for the plugins to specify the
      type of the kernel image.</para>

      <variablelist>
        <varlistentry>
          <term>uki</term>
          <listitem>
            <para>Unified kernel image.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>pe</term>
          <listitem>
            <para>PE binary.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>unknown</term>
          <listitem>
            <para>Unknown type.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>
      </variablelist>

      <para><varname>$KERNEL_INSTALL_MACHINE_ID</varname> is set for the plugins to the desired machine-id to
      use. It's always a 128-bit ID. Normally it is read from <filename>/etc/machine-id</filename>, but it can
      also be overridden via <varname>$MACHINE_ID</varname> (see below). If not specified via these methods,
      a fallback value will generated by <command>kernel-install</command> and used only for a single
      invocation.</para>

      <para><varname>$KERNEL_INSTALL_ENTRY_TOKEN</varname> is set for the plugins to the desired entry
      "token" to use. It's an identifier that shall be used to identify the local installation, and is often
      the machine ID, i.e. same as <varname>$KERNEL_INSTALL_MACHINE_ID</varname>, but might also be a
      different type of identifier, for example a fixed string or the <varname>ID=</varname>,
      <varname>IMAGE_ID=</varname> values from <filename>/etc/os-release</filename>. The string passed here
      will be used to name Boot Loader Specification entries, or the directories the kernel image and initial
      RAM disk images are placed into.</para>

      <para>Note that while <varname>$KERNEL_INSTALL_ENTRY_TOKEN</varname> and
      <varname>$KERNEL_INSTALL_MACHINE_ID</varname> are often set to the same value, the latter is guaranteed
      to be a valid 32 character ID in lowercase hexadecimals while the former can be any short string. The
      entry token to use is read from <filename>/etc/kernel/entry-token</filename>, if it exists. Otherwise, a
      few possible candidates below <varname>$BOOT</varname> are checked for Boot Loader Specification Type 1
      entry directories, and if found the entry token is derived from that. If that is not successful,
      <varname>$KERNEL_INSTALL_MACHINE_ID</varname> is used as fallback.</para>

      <para><varname>$KERNEL_INSTALL_BOOT_ROOT</varname> is set for the plugins to the absolute path of the
      root directory (mount point, usually) of the hierarchy where boot loader entries, kernel images, and
      associated resources should be placed. This usually is the path where the XBOOTLDR partition or the ESP
      (EFI System Partition) are mounted, and also conceptually referred to as <varname>$BOOT</varname>. Can
      be overridden by setting <varname>$BOOT_ROOT</varname> (see below).</para>

      <para><varname>$KERNEL_INSTALL_LAYOUT=auto|bls|uki|other|...</varname> is set for the plugins to specify the
      installation layout. Additional layout names may be defined by convention. If a plugin uses a special layout,
      it is encouraged to declare its own layout name and configure <varname>layout=</varname> in
      <filename>install.conf</filename> upon initial installation. The following values are currently
      understood:</para>

      <variablelist>
        <varlistentry>
          <term>bls</term>
          <listitem>
            <para>Standard <ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot Loader
            Specification</ulink> Type #1 layout, compatible with
            <citerefentry><refentrytitle>systemd-boot</refentrytitle><manvolnum>7</manvolnum></citerefentry>:
            entries in
            <filename>$BOOT/loader/entries/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>[+<replaceable>TRIES</replaceable>].conf</filename>,
            kernel and initrds under
            <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable>/<replaceable>KERNEL-VERSION</replaceable>/</filename></para>
            <para>Implemented by <filename>90-loaderentry.install</filename>.</para>

            <xi:include href="version-info.xml" xpointer="v250"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>uki</term>
          <listitem>
            <para>Standard <ulink
            url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot Loader
            Specification</ulink> Type #2 layout, compatible with
            <citerefentry><refentrytitle>systemd-boot</refentrytitle><manvolnum>7</manvolnum></citerefentry>:
            unified kernel images under <filename>$BOOT/EFI/Linux</filename> as
            <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>[+<replaceable>TRIES</replaceable>].efi</filename>.</para>
            <para>Implemented by <filename>90-uki-copy.install</filename>.</para>

            <xi:include href="version-info.xml" xpointer="v253"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>other</term>
          <listitem>
            <para>Some other layout not understood natively by <command>kernel-install</command>.</para>

          <xi:include href="version-info.xml" xpointer="v250"/>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>auto</term>
          <listitem>
            <para>Pick the layout automatically. If the kernel is a UKI set layout to
            <option>uki</option>. If not default to <option>bls</option> if
            <filename>$BOOT/loader/entries.srel</filename> with content <literal>type1</literal> or
            <filename>$BOOT/<replaceable>ENTRY-TOKEN</replaceable></filename> exists, or
            <option>other</option> otherwise.</para>
            <para>Leaving layout blank has the same effect. This is the default.</para>

            <xi:include href="version-info.xml" xpointer="v254"/>
          </listitem>
        </varlistentry>
      </variablelist>

      <para><varname>$KERNEL_INSTALL_INITRD_GENERATOR</varname> and <varname>$KERNEL_INSTALL_UKI_GENERATOR</varname>
      are set for plugins to select the initrd and/or UKI generator. This may be configured as
      <varname>initrd_generator=</varname> and <varname>uki_generator=</varname> in <filename>install.conf</filename>, see below.</para>

      <para><varname>$KERNEL_INSTALL_STAGING_AREA</varname> is set for plugins to a path to a directory.
      Plugins may drop files in that directory, and they will be installed as part of the loader entry, based
      on the file name and extension: Files named <filename>initrd*</filename> will be installed as <replaceable>INITRD-FILE</replaceable>s,
      and files named <filename>microcode*</filename> will be prepended before <replaceable>INITRD-FILE</replaceable>s.</para>

    </refsect2>

    <refsect2>
      <title>Environment variables understood by <command>kernel-install</command></title>

      <para><varname>$KERNEL_INSTALL_CONF_ROOT</varname> can be set to override the location of the
      configuration files read by <command>kernel-install</command>. When set,
      <filename>install.conf</filename>, <filename>entry-token</filename>, and other files will be read from
      this directory only. Note that this path is relative to the host, and in particular <emphasis>symlinks
      in this directory are resolved relative to the host</emphasis>, even if
      <option>--root=<replaceable>root</replaceable></option> is used. This means that it is generally
      <emphasis>not</emphasis> correct to use this variable to specify a directory underneath
      <replaceable>root</replaceable> if symlinks are used there.</para>

      <para><varname>$KERNEL_INSTALL_PLUGINS</varname> can be set to override the list of plugins executed by
      <command>kernel-install</command>. The argument is a whitespace-separated list of paths.
      <literal>KERNEL_INSTALL_PLUGINS=:</literal> may be used to prevent any plugins from running.
      </para>

      <para><varname>$MACHINE_ID</varname> can be set for <command>kernel-install</command> to override
      <varname>$KERNEL_INSTALL_MACHINE_ID</varname>, the machine ID.</para>

      <para><varname>$BOOT_ROOT</varname> can be set for <command>kernel-install</command> to override
      <varname>$KERNEL_INSTALL_BOOT_ROOT</varname>, the installation location for boot entries.</para>

      <para>The last two variables may also be set in <filename>install.conf</filename>. Variables set in the
      environment take precedence over the values specified in the config file.</para>
    </refsect2>
  </refsect1>

  <refsect1>
    <title>Exit status</title>
    <para>If every executable returns 0 or 77, 0 is returned, and a non-zero failure code otherwise.</para>
  </refsect1>

  <refsect1>
    <title>Files</title>
    <variablelist>
      <varlistentry>
        <term><filename>/etc/kernel/install.d/*.install</filename></term>
        <term><filename>/usr/lib/kernel/install.d/*.install</filename></term>
        <listitem>
          <para>Drop-in files which are executed by <command>kernel-install</command>.</para>

          <xi:include href="version-info.xml" xpointer="v198"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/etc/kernel/cmdline</filename></term>
        <term><filename>/usr/lib/kernel/cmdline</filename></term>
        <term><filename>/proc/cmdline</filename></term>
        <listitem>
          <para>Specifies the kernel command line to use. The first of the files that is found will be used.
          <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be used to override the search path; see below for
          details.</para>

          <xi:include href="version-info.xml" xpointer="v198"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/etc/kernel/devicetree</filename></term>
        <term><filename>/usr/lib/kernel/devicetree</filename></term>
        <listitem>
          <para>Specifies the partial path to the file containing the device tree blob to install with the
          kernel and use at boot. The first of the files that is found will be used.
          Alternatively the string "all" may be used to install all available device trees for the given kernel.
          <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be used to override the search path; see below for
          details.</para>

          <para>The <filename>devicetree</filename> file contains a path, and this path specifies a location
          relative to the kernel install tree. A set of locations is checked, including in particular
          <filename>/usr/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/dtb/</filename>, which is the
          recommended location to place the dtb files under. For example, with
          <literal>broadcom/bcm2711-rpi-4-b.dtb</literal> in the <filename>devicetree</filename> file, the
          device tree blob for the Raspberry Pi 4 Model B would be installed, and the actual file would be
          <filename index='false'>/usr/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/dtb/broadcom/bcm2711-rpi-4-b.dtb</filename>.
          </para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/etc/kernel/tries</filename></term>
        <listitem>
          <para>Read by <filename>90-loaderentry.install</filename> and
          <filename>90-uki-copy.install</filename>. If this file exists, a numeric value is read from it and
          the naming of the generated entry file or UKI is altered to include it as
          <filename>$BOOT/loader/entries/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>+<replaceable>TRIES</replaceable>.conf</filename>
          or
          <filename>$BOOT/EFI/Linux/<replaceable>ENTRY-TOKEN</replaceable>-<replaceable>KERNEL-VERSION</replaceable>+<replaceable>TRIES</replaceable>.efi</filename>,
          respectively. This is useful for boot loaders such as
          <citerefentry><refentrytitle>systemd-boot</refentrytitle><manvolnum>7</manvolnum></citerefentry>
          which implement boot attempt counting with a counter embedded in the entry file name.
          <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be used to override the search path; see below for
          details.</para>

          <xi:include href="version-info.xml" xpointer="v240"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/etc/kernel/entry-token</filename></term>
        <listitem>
          <para>If this file exists it is read and used as "entry token" for this system, i.e. is used for
          naming Boot Loader Specification entries. See <varname>$KERNEL_INSTALL_ENTRY_TOKEN</varname> above
          for details. <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be used to override the search path; see
          below for details.</para>

          <xi:include href="version-info.xml" xpointer="v251"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <filename>/etc/machine-id</filename>
        </term>
          <listitem>
            <para>The content of this file specifies the machine identification
            <replaceable>MACHINE-ID</replaceable>.</para>

            <xi:include href="version-info.xml" xpointer="v198"/>
          </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/etc/os-release</filename></term>
        <term><filename>/usr/lib/os-release</filename></term>
        <listitem>
            <para>Read by <filename>90-loaderentry.install</filename>. If available,
            <varname>PRETTY_NAME=</varname> is read from these files and used as the title of the boot menu
            entry. Otherwise, <literal>Linux <replaceable>KERNEL-VERSION</replaceable></literal> will be
            used.</para>

            <xi:include href="version-info.xml" xpointer="v198"/>
          </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename>/etc/kernel/install.conf</filename></term>
        <term><filename>/run/kernel/install.conf</filename></term>
        <term><filename>/usr/local/lib/kernel/install.conf</filename></term>
        <term><filename>/usr/lib/kernel/install.conf</filename></term>
        <term><filename>/etc/kernel/install.conf.d/*.conf</filename></term>
        <term><filename>/run/kernel/install.conf.d/*.conf</filename></term>
        <term><filename>/usr/local/lib/kernel/install.conf.d/*.conf</filename></term>
        <term><filename>/usr/lib/kernel/install.conf.d/*.conf</filename></term>
        <listitem>
          <para>Configuration file with options for <command>kernel-install</command>, as a series of
          <varname>KEY=</varname><replaceable>VALUE</replaceable> assignments, compatible with shell syntax,
          following the same rules as described in
          <citerefentry><refentrytitle>os-release</refentrytitle><manvolnum>5</manvolnum></citerefentry>. The
          first of the files that is found will be used. <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be
          used to override the search path; see below for details. Drop-in files may also be used
          to extend the configuration with overrides, see
          <citerefentry><refentrytitle>systemd.unit</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
          </para>

          <para>Currently, the following keys are supported:
          <varname>MACHINE_ID=</varname>,
          <varname>BOOT_ROOT=</varname>,
          <varname>layout=</varname>,
          <varname>initrd_generator=</varname>,
          <varname>uki_generator=</varname>.
          See the Environment variables section above for details.</para>

          <xi:include href="version-info.xml" xpointer="v250"/>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><filename>/etc/kernel/uki.conf</filename></term>
        <listitem>
          <para>Ini-style configuration file for
          <citerefentry><refentrytitle>ukify</refentrytitle><manvolnum>1</manvolnum></citerefentry> which is
          only effective when <varname>$KERNEL_INSTALL_LAYOUT</varname> or <varname>layout=</varname> in
          <filename>install.conf</filename> is set to <option>uki</option> and
          <varname>$KERNEL_INSTALL_UKI_GENERATOR</varname> or <varname>uki_generator=</varname> in
          <filename>install.conf</filename> is set to <option>ukify</option>, or is unset.
          <varname>$KERNEL_INSTALL_CONF_ROOT</varname> may be used to override the search path; see below for
          details.</para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/usr/lib/modules/<replaceable>KERNEL-VERSION/</replaceable></filename></term>

        <listitem>
          <para>Location for installed kernel modules and other kernel related resources. For each locally
          installed kernel a directory named after the kernel version (<command>uname -r</command>) is
          kept.</para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><filename>/usr/lib/modules/<replaceable>KERNEL-VERSION/vmlinuz</replaceable></filename></term>

        <listitem>
          <para>Location for installed kernel images. This is the recommended location for OS package
          managers to install kernel images into (as applicable), from which <command>kernel-install
          add</command> then copies it into the final boot partition.</para>

          <xi:include href="version-info.xml" xpointer="v255"/>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>For various cases listed above, if the <varname>$KERNEL_INSTALL_CONF_ROOT</varname> environment
    variable is set, it will override the search path. The files will be loaded <emphasis>only</emphasis>
    from the directory specified by the environment variable. When the variable is not set, the listed paths
    are tried in turn, and the first file that exists is used.</para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para><simplelist type="inline">
      <member><citerefentry><refentrytitle>machine-id</refentrytitle><manvolnum>5</manvolnum></citerefentry></member>
      <member><citerefentry><refentrytitle>os-release</refentrytitle><manvolnum>5</manvolnum></citerefentry></member>
      <member><citerefentry project='man-pages'><refentrytitle>depmod</refentrytitle><manvolnum>8</manvolnum></citerefentry></member>
      <member><citerefentry><refentrytitle>systemd-boot</refentrytitle><manvolnum>7</manvolnum></citerefentry></member>
      <member><citerefentry><refentrytitle>ukify</refentrytitle><manvolnum>1</manvolnum></citerefentry></member>
      <member><ulink url="https://uapi-group.org/specifications/specs/boot_loader_specification">Boot Loader Specification</ulink></member>
    </simplelist></para>
  </refsect1>

</refentry>
