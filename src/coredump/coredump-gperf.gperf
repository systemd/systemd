/* SPDX-License-Identifier: LGPL-2.1-or-later */
%{
_Pragma("GCC diagnostic ignored \"-Wimplicit-fallthrough\"")
#if __GNUC__ >= 15
_Pragma("GCC diagnostic ignored \"-Wzero-as-null-pointer-constant\"")
#endif
#include "conf-parser.h"
#include "coredump-config.h"
%}
struct ConfigPerfItem;
%null_strings
%language=ANSI-C
%define slot-name section_and_lvalue
%define hash-function-name coredump_gperf_hash
%define lookup-function-name coredump_gperf_lookup
%readonly-tables
%omit-struct-type
%struct-type
%includes
%%
Coredump.Storage,         config_parse_coredump_storage,    0,                      offsetof(CoredumpConfig, storage)
Coredump.Compress,        config_parse_bool,                0,                      offsetof(CoredumpConfig, compress)
Coredump.ProcessSizeMax,  config_parse_iec_uint64,          0,                      offsetof(CoredumpConfig, process_size_max)
Coredump.ExternalSizeMax, config_parse_iec_uint64_infinity, 0,                      offsetof(CoredumpConfig, external_size_max)
Coredump.JournalSizeMax,  config_parse_iec_size,            0,                      offsetof(CoredumpConfig, journal_size_max)
Coredump.KeepFree,        config_parse_iec_uint64,          0,                      offsetof(CoredumpConfig, keep_free)
Coredump.MaxUse,          config_parse_iec_uint64,          0,                      offsetof(CoredumpConfig, max_use)
Coredump.EnterNamespace,  config_parse_bool,                0,                      offsetof(CoredumpConfig, enter_namespace)
