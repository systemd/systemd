#compdef systemd-run
# SPDX-License-Identifier: LGPL-2.1-or-later

# @todo _systemctl has a helper with the same name, so we must redefine
__systemctl() {
    local -a _modes
    _modes=("--user" "--system")
    systemctl ${words:*_modes} --full --no-legend --no-pager --plain "$@" 2>/dev/null
}

(( $+functions[__systemd-run_get_slices] )) ||
    __systemd-run_get_slices () {
        __systemctl list-units --all -t slice \
            | { while read -r a b; do echo $a; done; };
    }

(( $+functions[__systemd-run_slices] )) ||
    __systemd-run_slices () {
        local -a _slices
        _slices=(${(fo)"$(__systemd-run_get_slices)"})
        typeset -U _slices
        _describe 'slices' _slices
    }

(( $+functions[_systemd-run_job_modes] )) ||
    _systemd-run_job_modes() {
        local -a _modes
        _modes=($( systemd-run --job-mode=help 2>/dev/null ))
        _values "${_modes[@]}"
    }

(( $+functions[_systemd-run_properties] )) ||
    _systemd-run_properties() {
        local -a _properties=(
            # man/systemd.exec.xml
            ExecSearchPath=
            WorkingDirectory=
            RootDirectory=
            RootImage=
            RootImageOptions=
            RootEphemeral=
            RootHash=
            RootHashSignature=
            RootVerity=
            RootImagePolicy=
            MountImagePolicy=
            ExtensionImagePolicy=
            MountAPIVFS=
            BindLogSockets=
            ProtectProc=
            ProcSubset=
            BindPaths=
            BindReadOnlyPaths=
            MountImages=
            ExtensionImages=
            ExtensionDirectories=
            User=
            Group=
            DynamicUser=
            SupplementaryGroups=
            SetLoginEnvironment=
            PAMName=
            CapabilityBoundingSet=
            AmbientCapabilities=
            NoNewPrivileges=
            SecureBits=
            SELinuxContext=
            AppArmorProfile=
            SmackProcessLabel=
            LimitCPU=
            LimitFSIZE=
            LimitDATA=
            LimitSTACK=
            LimitCORE=
            LimitRSS=
            LimitNOFILE=
            LimitAS=
            LimitNPROC=
            LimitMEMLOCK=
            LimitLOCKS=
            LimitSIGPENDING=
            LimitMSGQUEUE=
            LimitNICE=
            LimitRTPRIO=
            LimitRTTIME=
            UMask=
            CoredumpFilter=
            KeyringMode=
            OOMScoreAdjust=
            TimerSlackNSec=
            Personality=
            IgnoreSIGPIPE=
            Nice=
            CPUSchedulingPolicy=
            CPUSchedulingPriority=
            CPUSchedulingResetOnFork=
            CPUAffinity=
            NUMAPolicy=
            NUMAMask=
            IOSchedulingClass=
            IOSchedulingPriority=
            ProtectSystem=
            ProtectHome=
            RuntimeDirectory=
            StateDirectory=
            CacheDirectory=
            LogsDirectory=
            ConfigurationDirectory=
            RuntimeDirectoryMode=
            StateDirectoryMode=
            CacheDirectoryMode=
            LogsDirectoryMode=
            ConfigurationDirectoryMode=
            RuntimeDirectoryPreserve=
            TimeoutCleanSec=
            ReadWritePaths=
            ReadOnlyPaths=
            InaccessiblePaths=
            ExecPaths=
            NoExecPaths=
            TemporaryFileSystem=
            PrivateTmp=
            PrivateDevices=
            PrivateNetwork=
            NetworkNamespacePath=
            PrivateIPC=
            IPCNamespacePath=
            MemoryKSM=
            PrivatePIDs=
            PrivateUsers=
            ProtectHostname=
            ProtectClock=
            ProtectKernelTunables=
            ProtectKernelModules=
            ProtectKernelLogs=
            ProtectControlGroups=
            RestrictAddressFamilies=
            RestrictFileSystems=
            RestrictNamespaces=
            DelegateNamespaces=
            LockPersonality=
            MemoryDenyWriteExecute=
            RestrictRealtime=
            RestrictSUIDSGID=
            RemoveIPC=
            PrivateMounts=
            MountFlags=
            SystemCallFilter=
            SystemCallErrorNumber=
            SystemCallArchitectures=
            SystemCallLog=
            Environment=
            EnvironmentFile=
            PassEnvironment=
            UnsetEnvironment=
            StandardInput=
            StandardOutput=
            StandardError=
            StandardInputText=
            StandardInputData=
            LogLevelMax=
            LogExtraFields=
            LogRateLimitIntervalSec=
            LogRateLimitBurst=
            LogFilterPatterns=
            LogNamespace=
            SyslogIdentifier=
            SyslogFacility=
            SyslogLevel=
            SyslogLevelPrefix=
            TTYPath=
            TTYReset=
            TTYVHangup=
            TTYColumns=
            TTYRows=
            TTYVTDisallocate=
            LoadCredential=
            LoadCredentialEncrypted=
            ImportCredential=
            SetCredential=
            SetCredentialEncrypted=
            UtmpIdentifier=
            UtmpMode=

            # man/systemd.kill.xml
            KillMode=
            KillSignal=
            RestartKillSignal=
            SendSIGHUP=
            SendSIGKILL=
            FinalKillSignal=
            WatchdogSignal=

            # man/systemd.resource-control.xml
            CPUWeight=
            StartupCPUWeight=
            CPUQuota=
            CPUQuotaPeriodSec=
            AllowedCPUs=
            StartupAllowedCPUs=
            MemoryAccounting=
            MemoryMin=
            MemoryLow=
            StartupMemoryLow=
            DefaultStartupMemoryLow=
            MemoryHigh=
            StartupMemoryHigh=
            MemoryMax=
            StartupMemoryMax=
            MemorySwapMax=
            StartupMemorySwapMax=
            MemoryZSwapMax=
            StartupMemoryZSwapMax=
            MemoryZSwapWriteback=
            AllowedMemoryNodes=
            StartupAllowedMemoryNodes=
            TasksAccounting=
            TasksMax=
            IOAccounting=
            IOWeight=
            StartupIOWeight=
            IODeviceWeight=
            IOReadBandwidthMax=
            IOWriteBandwidthMax=
            IOReadIOPSMax=
            IOWriteIOPSMax=
            IODeviceLatencyTargetSec=
            IPAccounting=
            IPAddressAllow=
            IPAddressDeny=
            SocketBindAllow=
            SocketBindDeny=
            RestrictNetworkInterfaces=
            NFTSet=
            IPIngressFilterPath=
            IPEgressFilterPath=
            BPFProgram=
            DeviceAllow=
            DevicePolicy=
            Slice=
            Delegate=
            DelegateSubgroup=
            DisableControllers=
            ManagedOOMSwap=
            ManagedOOMMemoryPressure=
            ManagedOOMMemoryPressureLimit=
            ManagedOOMMemoryPressureDurationSec=
            ManagedOOMPreference=
            MemoryPressureWatch=
            MemoryPressureThresholdSec=
            CoredumpReceive=
        )
        _values 'NAME=VALUE' "${_properties[@]}"
    }

_arguments \
    '(-G --collect --shell)'{-G,--collect}'[Unload the transient unit after it completed]' \
    '--description=[Description for unit]:description' \
    '--gid=[Run as system group]:group:_groups' \
    '(- *)'{-h,--help}'[Show help message]' \
    '(-H --host)'{-H+,--host=}'[Operate on remote host]:[user@]host:_sd_hosts_or_user_at_host' \
    '(-M --machine)'{-M+,--machine=}'[Operate on local container]:machines:_sd_machines' \
    '(-C --capsule)'{-C,--capsule=}'[Operate on capsule]:capsule' \
    '--nice=[Nice level]:nice level' \
    '--no-ask-password[Do not query the user for authentication]' \
    '(--wait)--no-block[Do not synchronously wait for the unit start operation to finish]' \
    '--on-active=[Run after SEC seconds]:SEC' \
    '--on-boot=[Run SEC seconds after machine was booted up]:SEC' \
    '--on-calendar=[Realtime timer]:SPEC' \
    '--on-clock-change[Defines a trigger based on system clock jumps]' \
    '--on-startup=[Run SEC seconds after systemd was first started]:SEC' \
    '--on-timezone-change[Defines a trigger based on system timezone changes]' \
    '--on-unit-active=[Run SEC seconds after the last activation]:SEC' \
    '--on-unit-inactive=[Run SEC seconds after the last deactivation]:SEC' \
    '--path-property=[Set path unit property]:NAME=VALUE' \
    '(-P --pipe)'{-P,--pipe}'[Inherit standard input, output, and error]' \
    {'*-p+','*--property='}'[Set unit property]:NAME=VALUE:_systemd-run_properties' \
    '(-t --pty --shell)'{-t,--pty}'[The service connects to the terminal]' \
    '(-q --quiet)'{-q,--quiet}'[Suppresses additional informational output]' \
    '--json=[Output as JSON]:JSON:(pretty short off)' \
    '--job-mode=[Specify how to deal with other jobs]:mode:_systemd-run_job_modes' \
    '(-r --remain-after-exit)'{-r,--remain-after-exit}'[Leave service around until explicitly stopped]' \
    '(-d --same-dir --working-directory --shell)'{-d,--same-dir}'[Run on the current working directory]' \
    '--scope[Run this as scope rather than service]' \
    '--send-sighup[Send SIGHUP when terminating]' \
    '(--shell)--service-type=[Service type]:type:(simple forking oneshot dbus notify idle)' \
    {'*-E+','*--setenv='}'[Set environment]:NAME=VALUE' \
    '(-S --shell --pty --same-dir --wait --collect --service-type)'{-S,--shell}'[requests an interactive shell in the current working directory]' \
    '--slice=[Run in the specified slice]:slices:__systemd-run_slices' \
    '--slice-inherit[Run in the inherited slice]' \
    '--expand-environment=[Control expansion of environment variables]:bool:(yes no)' \
    '--socket-property=[Set socket unit property]:NAME=VALUE' \
    '(--user)--system[Run as system unit]' \
    '--timer-property=[Set timer unit property]:NAME=VALUE' \
    '--uid=[Run as system user]:user:_users' \
    '(-u --unit)'{-u+,--unit=}'[Run under the specified unit name]:unit name' \
    '(--system)--user[Run as user unit]' \
    '(- *)--version[Show package version]' \
    '(--no-block --shell)--wait[Wait until service stopped again]' \
    '(--same-dir -d --shell)--working-directory=[Run with the specified working directory]:dir:_files -/' \
    '(-):command: _command_names -e' \
    '*::arguments:_normal'
